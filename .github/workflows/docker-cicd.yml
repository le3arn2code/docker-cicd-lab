name: Docker CI/CD Pipeline
  
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  
env:
  DOCKER_IMAGE_NAME: docker-cicd-app
  DOCKER_TAG: latest
  
jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
  
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
  
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    name: Deploy Application
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create deployment script
      run: |
        cat > deploy.sh << 'DEPLOY_EOF'
        #!/bin/bash
        echo "Deploying application..."
        
        # Stop existing container if running
        docker stop docker-cicd-app || true
        docker rm docker-cicd-app || true
        
        # Pull latest image
        docker pull ${{ secrets.DOCKER_USERNAME }}/docker-cicd-app:latest
        
        # Run new container
        docker run -d \
          --name docker-cicd-app \
          --restart unless-stopped \
          -p 3000:3000 \
          ${{ secrets.DOCKER_USERNAME }}/docker-cicd-app:latest
        
        echo "Deployment completed successfully!"
        DEPLOY_EOF
        
        chmod +x deploy.sh
        
    - name: Simulate deployment
      run: |
        echo "Deployment script created successfully"
        echo "In a real scenario, this would deploy to your server"
        cat deploy.sh
